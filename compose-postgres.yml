version: "3.9"

networks:
  dbnet:
    driver: bridge

services:
  postgresdb:
    image: postgres:15
    container_name: postgrecontainer
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      TZ: Asia/Bangkok
      PGTZ: Asia/Bangkok
    ports:
      - "5432:5432"
    volumes:
      - postgresvolume:/var/lib/postgresql/data
      # หมายเหตุ: schema.sql จะรัน "ครั้งแรกเท่านั้น" ตอนที่ data directory ยังว่าง
      - ./schema.sql:/docker-entrypoint-initdb.d/00-schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks: [dbnet]

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmincontainer
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 6000
      TZ: Asia/Bangkok
    depends_on:
      postgresdb:
        condition: service_healthy
    ports:
      - "7000:6000"
    volumes:
      - pgadminvolume:/var/lib/pgadmin
    networks: [dbnet]

volumes:
  postgresvolume:
  pgadminvolume:




# docker compose -f ./compose-postgres.yml up -d
# psql -h 192.168.1.216 -p 5432 -d <databasename> -U <user> -W
# docker exec -it <container_name or id> psql -U <user> -d <database name> name
