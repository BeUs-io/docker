##############################
# NETWORKS & VOLUMES
##############################
networks:
  kafkanet:
    external: true
    name: docker_kafkanet
    driver: bridge
  web:
    external: true
    name: docker_web
    driver: bridge

volumes:
  pgdata:
  pgadmin_data:
  kfkdata:
  zk-data:
  zk-logs:

##############################
# SERVICES
##############################
services:
  # ==========================
  # Infra: PostgreSQL
  # ==========================
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    networks: [web]
    environment:
      POSTGRES_USER: ${LOCAL_POSTGRES_USER}
      POSTGRES_PASSWORD: ${LOCAL_POSTGRES_PASSWORD}
      POSTGRES_DB: ${LOCAL_POSTGRES_DB}
      TZ: Asia/Bangkok
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      # รันครั้งแรกเท่านั้น (init schema ของ auth ถ้ามี)
      - ./backend/authorizationserver/src/main/resources/data/schema.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./backend/authorizationserver/src/main/resources/data/seed.sql:/docker-entrypoint-initdb.d/seed.sql:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U "$$${POSTGRES_USER}" -d "$$${POSTGRES_DB}"']
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # ==========================
  # pgAdmin
  # ==========================
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks: [web]
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 6000
      TZ: Asia/Bangkok
    ports:
      - "5050:6000"
    volumes:
      - pgadmin_data:/var/lib/pgadmin


# docker compose -f ./compose-postgres.yml up -d
# docker compose -f ./compose-postgres.yml ps

