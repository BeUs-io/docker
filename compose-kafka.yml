# compose-kafka.yml  (ไม่มี key "version")
networks:
  kafkanet: {}
  web:
    name: docker_web

volumes:
  zk-data: {}
  zk-logs: {}

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"   # ชั่วคราว เปิดไว้สำหรับดีบัก (ปิดทีหลังได้)
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_INIT_LIMIT: 10
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok,stat,srvr,mntr,conf"
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-logs:/var/lib/zookeeper/log
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc -w 2 127.0.0.1 2181 | grep imok || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s
    networks:
      - kafkanet

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_healthy
    # เปิดทั้งพอร์ตภายในและภายนอก
    ports:
      - "9092:9092"   # client นอกเครื่อง (ชั่วคราว)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # สอง listener: ภายนอก (PLAINTEXT) และภายใน docker (PLAINTEXT_INTERNAL)
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      # !! สำคัญ: ใช้ IP เครื่องจริง แทน localhost
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://18.142.185.25:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - kafkanet
      - web          # << join network ของสแต็กหลัก เพื่อให้ service อื่นเรียก 'kafka' ได้

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.2
    container_name: kafdrop
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "9000:9000"   # UI
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"   # ใช้ชื่อ service ภายใน
      JVM_OPTS: "-Xms32M -Xmx64M"
    networks:
      - kafkanet
      - web
